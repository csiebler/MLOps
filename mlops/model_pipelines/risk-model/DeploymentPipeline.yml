name: Deployment Pipeline - $(Build.DefinitionName) - $(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - template: ../../recipes/common/Variables.yml

stages:

  - stage: DeployToTest
    displayName: Deploy model to Test (Azure Container Instance)
    jobs:
      - template: ../../recipes/cd/DeployToACIFromMetadata.yml
        parameters:
          rm_service_connection: '${{ variables.RM_SERVICE_CONNECTION }}'
          service_name: '${{ variables.RISK_MODEL_ACI_SERVICE_NAME }}'
          workspace: '${{ variables.WORKSPACE }}'
          resource_group: '${{ variables.RESOURCE_GROUP }}'
          model_name: '${{ variables.RISK_MODEL_NAME }}'

  - stage: DeployToProd
    displayName: Deploy to Prod with approval
    jobs:
      # Perform an empty deploy job for approval (This is the way in Azure Devops)
      - deployment: Approval
        displayName: Approval for rolling out to production
        environment: 'Prod'

      - template: ../../recipes/cd/DeployToAKSFromMetadata.yml
        parameters:
          rm_service_connection: '${{ variables.RM_SERVICE_CONNECTION }}'
          service_name: '${{ variables.RISK_MODEL_AKS_SERVICE_NAME }}'
          workspace: '${{ variables.WORKSPACE }}'
          resource_group: '${{ variables.RESOURCE_GROUP }}'
          model_name: '${{ variables.RISK_MODEL_NAME }}'
          aks_cluster: '${{ variables.AKS_CLUSTER }}'

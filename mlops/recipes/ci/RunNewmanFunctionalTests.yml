parameters:
  service_name: ''
  postman_collection_file: ''
  rm_service_connection: ''
  workspace: ''
  resource_group: ''

jobs:
  - job: RunNewmanTests

    variables:
      newman_test_dir: '$(System.DefaultWorkingDirectory)/newman_tests'
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.6'

      - script: pip install azureml-sdk python-dotenv
        displayName: 'Install libraries'

      - task: AzureCLI@2
        displayName: 'Install the CLI'
        inputs:
          scriptType: bash
          azureSubscription: ${{ parameters.rm_service_connection }}
          scriptLocation: inlineScript
          inlineScript: 'az extension add -n azure-cli-ml'

      - task: AzureCLI@2
        displayName: 'Look up api key'
        inputs:
          scriptType: bash
          azureSubscription: ${{ parameters.rm_service_connection }}
          scriptLocation: inlineScript
          inlineScript: 'az ml service get-keys --resource-group ${{ parameters.resource_group }} --workspace-name ${{ parameters.workspace }} -n  ${{ parameters.service_name }} --query "primaryKey" | xargs echo "##vso[task.setvariable variable=TMP_API_KEY]"'

      - task: AzureCLI@2
        displayName: 'Look up scoring uri'
        inputs:
          scriptType: bash
          azureSubscription: ${{ parameters.rm_service_connection }}
          scriptLocation: inlineScript
          inlineScript: 'az ml service show --resource-group ${{ parameters.resource_group }} --workspace-name ${{ parameters.workspace }} -n  ${{ parameters.service_name }} --query "scoringUri" | xargs echo "##vso[task.setvariable variable=TMP_SCORING_URI]"'

      #- bash: 'python -m models.utils.test.get_service_details --SERVICE_NAME ${{ parameters.service_name }}'
      #  displayName: "Look up scoring uri & api key"
      #  workingDirectory: $(Build.SourcesDirectory)

      - task: ShellScript@2
        displayName: install newman
        inputs:
          scriptPath: models/utils/test/install_newman.sh
          cwd: $(Build.SourcesDirectory)

      - bash: |
          mkdir $(newman_test_dir)
          newman run ${{ parameters.postman_collection_file }}  --global-var host="$(TMP_SCORING_URI)" --global-var api_key="$(TMP_API_KEY)" -r cli,junit --reporter-junit-export  $(newman_test_dir)
        displayName: "Run tests"
        workingDirectory: $(Build.SourcesDirectory)

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '*.xml'
          searchFolder:  $(newman_test_dir)
